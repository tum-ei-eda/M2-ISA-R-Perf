# Generated from CorePerfDSL.g4 by ANTLR 4.9
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2%")
        buf.write("\u0165\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\3\2\3")
        buf.write("\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2")
        buf.write("\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3")
        buf.write("\7\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n")
        buf.write("\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13")
        buf.write("\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\r\3\r\3")
        buf.write("\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3")
        buf.write("\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16")
        buf.write("\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17")
        buf.write("\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20")
        buf.write("\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22")
        buf.write("\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24")
        buf.write("\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25")
        buf.write("\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26")
        buf.write("\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27")
        buf.write("\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32")
        buf.write("\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\35")
        buf.write("\3\35\3\36\3\36\7\36\u012a\n\36\f\36\16\36\u012d\13\36")
        buf.write("\3\37\3\37\7\37\u0131\n\37\f\37\16\37\u0134\13\37\3 \3")
        buf.write(" \3 \3 \3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3\"\7\"\u0144\n")
        buf.write("\"\f\"\16\"\u0147\13\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3")
        buf.write("#\7#\u0152\n#\f#\16#\u0155\13#\3#\5#\u0158\n#\3#\5#\u015b")
        buf.write("\n#\3#\3#\3$\6$\u0160\n$\r$\16$\u0161\3$\3$\3\u0145\2")
        buf.write("%\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31")
        buf.write("\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31")
        buf.write("\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%\3\2\7\4")
        buf.write("\2C\\c|\6\2\62;C\\aac|\3\2\62;\4\2\f\ftt\5\2\13\f\17\17")
        buf.write("\"\"\2\u016b\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3")
        buf.write("\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2")
        buf.write("\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2")
        buf.write("\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2")
        buf.write("#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2")
        buf.write("\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65")
        buf.write("\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2")
        buf.write("\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2")
        buf.write("\2\3I\3\2\2\2\5X\3\2\2\2\7Z\3\2\2\2\t\\\3\2\2\2\13^\3")
        buf.write("\2\2\2\r`\3\2\2\2\17f\3\2\2\2\21h\3\2\2\2\23m\3\2\2\2")
        buf.write("\25y\3\2\2\2\27\u0086\3\2\2\2\31\u0088\3\2\2\2\33\u0096")
        buf.write("\3\2\2\2\35\u00a8\3\2\2\2\37\u00b3\3\2\2\2!\u00c6\3\2")
        buf.write("\2\2#\u00d1\3\2\2\2%\u00df\3\2\2\2\'\u00e3\3\2\2\2)\u00ec")
        buf.write("\3\2\2\2+\u00f3\3\2\2\2-\u00fc\3\2\2\2/\u0108\3\2\2\2")
        buf.write("\61\u010b\3\2\2\2\63\u0111\3\2\2\2\65\u011b\3\2\2\2\67")
        buf.write("\u0123\3\2\2\29\u0125\3\2\2\2;\u0127\3\2\2\2=\u012e\3")
        buf.write("\2\2\2?\u0135\3\2\2\2A\u013b\3\2\2\2C\u013f\3\2\2\2E\u014d")
        buf.write("\3\2\2\2G\u015f\3\2\2\2IJ\7E\2\2JK\7q\2\2KL\7p\2\2LM\7")
        buf.write("p\2\2MN\7g\2\2NO\7e\2\2OP\7v\2\2PQ\7q\2\2QR\7t\2\2RS\7")
        buf.write("O\2\2ST\7q\2\2TU\7f\2\2UV\7g\2\2VW\7n\2\2W\4\3\2\2\2X")
        buf.write("Y\7}\2\2Y\6\3\2\2\2Z[\7.\2\2[\b\3\2\2\2\\]\7\177\2\2]")
        buf.write("\n\3\2\2\2^_\7*\2\2_\f\3\2\2\2`a\7v\2\2ab\7t\2\2bc\7c")
        buf.write("\2\2cd\7e\2\2de\7g\2\2e\16\3\2\2\2fg\7<\2\2g\20\3\2\2")
        buf.write("\2hi\7n\2\2ij\7k\2\2jk\7p\2\2kl\7m\2\2l\22\3\2\2\2mn\7")
        buf.write("e\2\2no\7q\2\2op\7p\2\2pq\7p\2\2qr\7g\2\2rs\7e\2\2st\7")
        buf.write("v\2\2tu\7q\2\2uv\7t\2\2vw\7K\2\2wx\7p\2\2x\24\3\2\2\2")
        buf.write("yz\7e\2\2z{\7q\2\2{|\7p\2\2|}\7p\2\2}~\7g\2\2~\177\7e")
        buf.write("\2\2\177\u0080\7v\2\2\u0080\u0081\7q\2\2\u0081\u0082\7")
        buf.write("t\2\2\u0082\u0083\7Q\2\2\u0083\u0084\7w\2\2\u0084\u0085")
        buf.write("\7v\2\2\u0085\26\3\2\2\2\u0086\u0087\7+\2\2\u0087\30\3")
        buf.write("\2\2\2\u0088\u0089\7T\2\2\u0089\u008a\7g\2\2\u008a\u008b")
        buf.write("\7u\2\2\u008b\u008c\7q\2\2\u008c\u008d\7w\2\2\u008d\u008e")
        buf.write("\7t\2\2\u008e\u008f\7e\2\2\u008f\u0090\7g\2\2\u0090\u0091")
        buf.write("\7O\2\2\u0091\u0092\7q\2\2\u0092\u0093\7f\2\2\u0093\u0094")
        buf.write("\7g\2\2\u0094\u0095\7n\2\2\u0095\32\3\2\2\2\u0096\u0097")
        buf.write("\7V\2\2\u0097\u0098\7t\2\2\u0098\u0099\7c\2\2\u0099\u009a")
        buf.write("\7e\2\2\u009a\u009b\7g\2\2\u009b\u009c\7X\2\2\u009c\u009d")
        buf.write("\7c\2\2\u009d\u009e\7n\2\2\u009e\u009f\7w\2\2\u009f\u00a0")
        buf.write("\7g\2\2\u00a0\u00a1\7O\2\2\u00a1\u00a2\7c\2\2\u00a2\u00a3")
        buf.write("\7r\2\2\u00a3\u00a4\7r\2\2\u00a4\u00a5\7k\2\2\u00a5\u00a6")
        buf.write("\7p\2\2\u00a6\u00a7\7i\2\2\u00a7\34\3\2\2\2\u00a8\u00a9")
        buf.write("\7V\2\2\u00a9\u00aa\7t\2\2\u00aa\u00ab\7c\2\2\u00ab\u00ac")
        buf.write("\7e\2\2\u00ac\u00ad\7g\2\2\u00ad\u00ae\7X\2\2\u00ae\u00af")
        buf.write("\7c\2\2\u00af\u00b0\7n\2\2\u00b0\u00b1\7w\2\2\u00b1\u00b2")
        buf.write("\7g\2\2\u00b2\36\3\2\2\2\u00b3\u00b4\7O\2\2\u00b4\u00b5")
        buf.write("\7k\2\2\u00b5\u00b6\7e\2\2\u00b6\u00b7\7t\2\2\u00b7\u00b8")
        buf.write("\7q\2\2\u00b8\u00b9\7c\2\2\u00b9\u00ba\7e\2\2\u00ba\u00bb")
        buf.write("\7v\2\2\u00bb\u00bc\7k\2\2\u00bc\u00bd\7q\2\2\u00bd\u00be")
        buf.write("\7p\2\2\u00be\u00bf\7O\2\2\u00bf\u00c0\7c\2\2\u00c0\u00c1")
        buf.write("\7r\2\2\u00c1\u00c2\7r\2\2\u00c2\u00c3\7k\2\2\u00c3\u00c4")
        buf.write("\7p\2\2\u00c4\u00c5\7i\2\2\u00c5 \3\2\2\2\u00c6\u00c7")
        buf.write("\7K\2\2\u00c7\u00c8\7p\2\2\u00c8\u00c9\7u\2\2\u00c9\u00ca")
        buf.write("\7v\2\2\u00ca\u00cb\7t\2\2\u00cb\u00cc\7I\2\2\u00cc\u00cd")
        buf.write("\7t\2\2\u00cd\u00ce\7q\2\2\u00ce\u00cf\7w\2\2\u00cf\u00d0")
        buf.write("\7r\2\2\u00d0\"\3\2\2\2\u00d1\u00d2\7E\2\2\u00d2\u00d3")
        buf.write("\7q\2\2\u00d3\u00d4\7t\2\2\u00d4\u00d5\7g\2\2\u00d5\u00d6")
        buf.write("\7R\2\2\u00d6\u00d7\7g\2\2\u00d7\u00d8\7t\2\2\u00d8\u00d9")
        buf.write("\7h\2\2\u00d9\u00da\7O\2\2\u00da\u00db\7q\2\2\u00db\u00dc")
        buf.write("\7f\2\2\u00dc\u00dd\7g\2\2\u00dd\u00de\7n\2\2\u00de$\3")
        buf.write("\2\2\2\u00df\u00e0\7w\2\2\u00e0\u00e1\7u\2\2\u00e1\u00e2")
        buf.write("\7g\2\2\u00e2&\3\2\2\2\u00e3\u00e4\7R\2\2\u00e4\u00e5")
        buf.write("\7k\2\2\u00e5\u00e6\7r\2\2\u00e6\u00e7\7g\2\2\u00e7\u00e8")
        buf.write("\7n\2\2\u00e8\u00e9\7k\2\2\u00e9\u00ea\7p\2\2\u00ea\u00eb")
        buf.write("\7g\2\2\u00eb(\3\2\2\2\u00ec\u00ed\7c\2\2\u00ed\u00ee")
        buf.write("\7u\2\2\u00ee\u00ef\7u\2\2\u00ef\u00f0\7k\2\2\u00f0\u00f1")
        buf.write("\7i\2\2\u00f1\u00f2\7p\2\2\u00f2*\3\2\2\2\u00f3\u00f4")
        buf.write("\7T\2\2\u00f4\u00f5\7g\2\2\u00f5\u00f6\7u\2\2\u00f6\u00f7")
        buf.write("\7q\2\2\u00f7\u00f8\7w\2\2\u00f8\u00f9\7t\2\2\u00f9\u00fa")
        buf.write("\7e\2\2\u00fa\u00fb\7g\2\2\u00fb,\3\2\2\2\u00fc\u00fd")
        buf.write("\7O\2\2\u00fd\u00fe\7k\2\2\u00fe\u00ff\7e\2\2\u00ff\u0100")
        buf.write("\7t\2\2\u0100\u0101\7q\2\2\u0101\u0102\7c\2\2\u0102\u0103")
        buf.write("\7e\2\2\u0103\u0104\7v\2\2\u0104\u0105\7k\2\2\u0105\u0106")
        buf.write("\7q\2\2\u0106\u0107\7p\2\2\u0107.\3\2\2\2\u0108\u0109")
        buf.write("\7/\2\2\u0109\u010a\7@\2\2\u010a\60\3\2\2\2\u010b\u010c")
        buf.write("\7U\2\2\u010c\u010d\7v\2\2\u010d\u010e\7c\2\2\u010e\u010f")
        buf.write("\7i\2\2\u010f\u0110\7g\2\2\u0110\62\3\2\2\2\u0111\u0112")
        buf.write("\7E\2\2\u0112\u0113\7q\2\2\u0113\u0114\7p\2\2\u0114\u0115")
        buf.write("\7p\2\2\u0115\u0116\7g\2\2\u0116\u0117\7e\2\2\u0117\u0118")
        buf.write("\7v\2\2\u0118\u0119\7q\2\2\u0119\u011a\7t\2\2\u011a\64")
        buf.write("\3\2\2\2\u011b\u011c\7x\2\2\u011c\u011d\7k\2\2\u011d\u011e")
        buf.write("\7t\2\2\u011e\u011f\7v\2\2\u011f\u0120\7w\2\2\u0120\u0121")
        buf.write("\7c\2\2\u0121\u0122\7n\2\2\u0122\66\3\2\2\2\u0123\u0124")
        buf.write("\7?\2\2\u01248\3\2\2\2\u0125\u0126\7$\2\2\u0126:\3\2\2")
        buf.write("\2\u0127\u012b\t\2\2\2\u0128\u012a\t\3\2\2\u0129\u0128")
        buf.write("\3\2\2\2\u012a\u012d\3\2\2\2\u012b\u0129\3\2\2\2\u012b")
        buf.write("\u012c\3\2\2\2\u012c<\3\2\2\2\u012d\u012b\3\2\2\2\u012e")
        buf.write("\u0132\t\4\2\2\u012f\u0131\t\4\2\2\u0130\u012f\3\2\2\2")
        buf.write("\u0131\u0134\3\2\2\2\u0132\u0130\3\2\2\2\u0132\u0133\3")
        buf.write("\2\2\2\u0133>\3\2\2\2\u0134\u0132\3\2\2\2\u0135\u0136")
        buf.write("\7]\2\2\u0136\u0137\7C\2\2\u0137\u0138\7N\2\2\u0138\u0139")
        buf.write("\7N\2\2\u0139\u013a\7_\2\2\u013a@\3\2\2\2\u013b\u013c")
        buf.write("\7]\2\2\u013c\u013d\7A\2\2\u013d\u013e\7_\2\2\u013eB\3")
        buf.write("\2\2\2\u013f\u0140\7\61\2\2\u0140\u0141\7,\2\2\u0141\u0145")
        buf.write("\3\2\2\2\u0142\u0144\13\2\2\2\u0143\u0142\3\2\2\2\u0144")
        buf.write("\u0147\3\2\2\2\u0145\u0146\3\2\2\2\u0145\u0143\3\2\2\2")
        buf.write("\u0146\u0148\3\2\2\2\u0147\u0145\3\2\2\2\u0148\u0149\7")
        buf.write(",\2\2\u0149\u014a\7\61\2\2\u014a\u014b\3\2\2\2\u014b\u014c")
        buf.write("\b\"\2\2\u014cD\3\2\2\2\u014d\u014e\7\61\2\2\u014e\u014f")
        buf.write("\7\61\2\2\u014f\u0153\3\2\2\2\u0150\u0152\n\5\2\2\u0151")
        buf.write("\u0150\3\2\2\2\u0152\u0155\3\2\2\2\u0153\u0151\3\2\2\2")
        buf.write("\u0153\u0154\3\2\2\2\u0154\u015a\3\2\2\2\u0155\u0153\3")
        buf.write("\2\2\2\u0156\u0158\7t\2\2\u0157\u0156\3\2\2\2\u0157\u0158")
        buf.write("\3\2\2\2\u0158\u0159\3\2\2\2\u0159\u015b\7\f\2\2\u015a")
        buf.write("\u0157\3\2\2\2\u015a\u015b\3\2\2\2\u015b\u015c\3\2\2\2")
        buf.write("\u015c\u015d\b#\2\2\u015dF\3\2\2\2\u015e\u0160\t\6\2\2")
        buf.write("\u015f\u015e\3\2\2\2\u0160\u0161\3\2\2\2\u0161\u015f\3")
        buf.write("\2\2\2\u0161\u0162\3\2\2\2\u0162\u0163\3\2\2\2\u0163\u0164")
        buf.write("\b$\2\2\u0164H\3\2\2\2\n\2\u012b\u0132\u0145\u0153\u0157")
        buf.write("\u015a\u0161\3\b\2\2")
        return buf.getvalue()


class CorePerfDSLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    ID = 29
    INT = 30
    KEYWORD_ALL = 31
    KEYWORD_REST = 32
    ML_COMMENT = 33
    SL_COMMENT = 34
    WS = 35

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'ConnectorModel'", "'{'", "','", "'}'", "'('", "'trace'", "':'", 
            "'link'", "'connectorIn'", "'connectorOut'", "')'", "'ResourceModel'", 
            "'TraceValueMapping'", "'TraceValue'", "'MicroactionMapping'", 
            "'InstrGroup'", "'CorePerfModel'", "'use'", "'Pipeline'", "'assign'", 
            "'Resource'", "'Microaction'", "'->'", "'Stage'", "'Connector'", 
            "'virtual'", "'='", "'\"'", "'[ALL]'", "'[?]'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "INT", "KEYWORD_ALL", "KEYWORD_REST", "ML_COMMENT", "SL_COMMENT", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "ID", "INT", "KEYWORD_ALL", "KEYWORD_REST", 
                  "ML_COMMENT", "SL_COMMENT", "WS" ]

    grammarFileName = "CorePerfDSL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


