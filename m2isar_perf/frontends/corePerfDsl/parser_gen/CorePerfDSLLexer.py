# Generated from CorePerfDSL.g4 by ANTLR 4.9.3
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2/")
        buf.write("\u01c2\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3")
        buf.write("\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7")
        buf.write("\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3")
        buf.write("\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13")
        buf.write("\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f")
        buf.write("\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3")
        buf.write("\r\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3")
        buf.write("\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20")
        buf.write("\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22")
        buf.write("\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22")
        buf.write("\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23")
        buf.write("\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24")
        buf.write("\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25")
        buf.write("\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26")
        buf.write("\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30")
        buf.write("\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33")
        buf.write("\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33")
        buf.write("\3\34\3\34\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3 \3 \3")
        buf.write(" \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3")
        buf.write("\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#")
        buf.write("\3#\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3")
        buf.write("%\3%\3&\3&\3\'\3\'\7\'\u017c\n\'\f\'\16\'\u017f\13\'\3")
        buf.write("(\3(\7(\u0183\n(\f(\16(\u0186\13(\3)\3)\3)\3)\7)\u018c")
        buf.write("\n)\f)\16)\u018f\13)\3)\3)\3*\3*\3*\3*\3*\3*\3+\3+\3+")
        buf.write("\3+\3,\3,\3,\3,\7,\u01a1\n,\f,\16,\u01a4\13,\3,\3,\3,")
        buf.write("\3,\3,\3-\3-\3-\3-\7-\u01af\n-\f-\16-\u01b2\13-\3-\5-")
        buf.write("\u01b5\n-\3-\5-\u01b8\n-\3-\3-\3.\6.\u01bd\n.\r.\16.\u01be")
        buf.write("\3.\3.\3\u01a2\2/\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23")
        buf.write("\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25")
        buf.write(")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A")
        buf.write("\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/\3\2\b\4\2C\\c|\7\2\60\60")
        buf.write("\62;C\\aac|\3\2\62;\5\2\f\f\17\17$$\4\2\f\f\17\17\5\2")
        buf.write("\13\f\17\17\"\"\2\u01ca\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3")
        buf.write("\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2")
        buf.write("\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2")
        buf.write("\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2")
        buf.write("!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2")
        buf.write("\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3")
        buf.write("\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2")
        buf.write("\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2")
        buf.write("\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2")
        buf.write("\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3")
        buf.write("\2\2\2\2[\3\2\2\2\3]\3\2\2\2\5l\3\2\2\2\7n\3\2\2\2\tp")
        buf.write("\3\2\2\2\13r\3\2\2\2\rt\3\2\2\2\17z\3\2\2\2\21|\3\2\2")
        buf.write("\2\23\u0081\3\2\2\2\25\u008d\3\2\2\2\27\u009a\3\2\2\2")
        buf.write("\31\u009c\3\2\2\2\33\u00aa\3\2\2\2\35\u00b0\3\2\2\2\37")
        buf.write("\u00bc\3\2\2\2!\u00c1\3\2\2\2#\u00c6\3\2\2\2%\u00d8\3")
        buf.write("\2\2\2\'\u00e3\3\2\2\2)\u00f6\3\2\2\2+\u0101\3\2\2\2-")
        buf.write("\u010f\3\2\2\2/\u0113\3\2\2\2\61\u011c\3\2\2\2\63\u0123")
        buf.write("\3\2\2\2\65\u012c\3\2\2\2\67\u0138\3\2\2\29\u013a\3\2")
        buf.write("\2\2;\u013c\3\2\2\2=\u013f\3\2\2\2?\u0141\3\2\2\2A\u0148")
        buf.write("\3\2\2\2C\u014e\3\2\2\2E\u0157\3\2\2\2G\u0165\3\2\2\2")
        buf.write("I\u016f\3\2\2\2K\u0177\3\2\2\2M\u0179\3\2\2\2O\u0180\3")
        buf.write("\2\2\2Q\u0187\3\2\2\2S\u0192\3\2\2\2U\u0198\3\2\2\2W\u019c")
        buf.write("\3\2\2\2Y\u01aa\3\2\2\2[\u01bc\3\2\2\2]^\7E\2\2^_\7q\2")
        buf.write("\2_`\7p\2\2`a\7p\2\2ab\7g\2\2bc\7e\2\2cd\7v\2\2de\7q\2")
        buf.write("\2ef\7t\2\2fg\7O\2\2gh\7q\2\2hi\7f\2\2ij\7g\2\2jk\7n\2")
        buf.write("\2k\4\3\2\2\2lm\7}\2\2m\6\3\2\2\2no\7.\2\2o\b\3\2\2\2")
        buf.write("pq\7\177\2\2q\n\3\2\2\2rs\7*\2\2s\f\3\2\2\2tu\7v\2\2u")
        buf.write("v\7t\2\2vw\7c\2\2wx\7e\2\2xy\7g\2\2y\16\3\2\2\2z{\7<\2")
        buf.write("\2{\20\3\2\2\2|}\7n\2\2}~\7k\2\2~\177\7p\2\2\177\u0080")
        buf.write("\7m\2\2\u0080\22\3\2\2\2\u0081\u0082\7e\2\2\u0082\u0083")
        buf.write("\7q\2\2\u0083\u0084\7p\2\2\u0084\u0085\7p\2\2\u0085\u0086")
        buf.write("\7g\2\2\u0086\u0087\7e\2\2\u0087\u0088\7v\2\2\u0088\u0089")
        buf.write("\7q\2\2\u0089\u008a\7t\2\2\u008a\u008b\7K\2\2\u008b\u008c")
        buf.write("\7p\2\2\u008c\24\3\2\2\2\u008d\u008e\7e\2\2\u008e\u008f")
        buf.write("\7q\2\2\u008f\u0090\7p\2\2\u0090\u0091\7p\2\2\u0091\u0092")
        buf.write("\7g\2\2\u0092\u0093\7e\2\2\u0093\u0094\7v\2\2\u0094\u0095")
        buf.write("\7q\2\2\u0095\u0096\7t\2\2\u0096\u0097\7Q\2\2\u0097\u0098")
        buf.write("\7w\2\2\u0098\u0099\7v\2\2\u0099\26\3\2\2\2\u009a\u009b")
        buf.write("\7+\2\2\u009b\30\3\2\2\2\u009c\u009d\7T\2\2\u009d\u009e")
        buf.write("\7g\2\2\u009e\u009f\7u\2\2\u009f\u00a0\7q\2\2\u00a0\u00a1")
        buf.write("\7w\2\2\u00a1\u00a2\7t\2\2\u00a2\u00a3\7e\2\2\u00a3\u00a4")
        buf.write("\7g\2\2\u00a4\u00a5\7O\2\2\u00a5\u00a6\7q\2\2\u00a6\u00a7")
        buf.write("\7f\2\2\u00a7\u00a8\7g\2\2\u00a8\u00a9\7n\2\2\u00a9\32")
        buf.write("\3\2\2\2\u00aa\u00ab\7O\2\2\u00ab\u00ac\7q\2\2\u00ac\u00ad")
        buf.write("\7f\2\2\u00ad\u00ae\7g\2\2\u00ae\u00af\7n\2\2\u00af\34")
        buf.write("\3\2\2\2\u00b0\u00b1\7V\2\2\u00b1\u00b2\7t\2\2\u00b2\u00b3")
        buf.write("\7c\2\2\u00b3\u00b4\7e\2\2\u00b4\u00b5\7g\2\2\u00b5\u00b6")
        buf.write("\7E\2\2\u00b6\u00b7\7q\2\2\u00b7\u00b8\7p\2\2\u00b8\u00b9")
        buf.write("\7h\2\2\u00b9\u00ba\7k\2\2\u00ba\u00bb\7i\2\2\u00bb\36")
        buf.write("\3\2\2\2\u00bc\u00bd\7p\2\2\u00bd\u00be\7c\2\2\u00be\u00bf")
        buf.write("\7o\2\2\u00bf\u00c0\7g\2\2\u00c0 \3\2\2\2\u00c1\u00c2")
        buf.write("\7e\2\2\u00c2\u00c3\7q\2\2\u00c3\u00c4\7t\2\2\u00c4\u00c5")
        buf.write("\7g\2\2\u00c5\"\3\2\2\2\u00c6\u00c7\7V\2\2\u00c7\u00c8")
        buf.write("\7t\2\2\u00c8\u00c9\7c\2\2\u00c9\u00ca\7e\2\2\u00ca\u00cb")
        buf.write("\7g\2\2\u00cb\u00cc\7X\2\2\u00cc\u00cd\7c\2\2\u00cd\u00ce")
        buf.write("\7n\2\2\u00ce\u00cf\7w\2\2\u00cf\u00d0\7g\2\2\u00d0\u00d1")
        buf.write("\7O\2\2\u00d1\u00d2\7c\2\2\u00d2\u00d3\7r\2\2\u00d3\u00d4")
        buf.write("\7r\2\2\u00d4\u00d5\7k\2\2\u00d5\u00d6\7p\2\2\u00d6\u00d7")
        buf.write("\7i\2\2\u00d7$\3\2\2\2\u00d8\u00d9\7V\2\2\u00d9\u00da")
        buf.write("\7t\2\2\u00da\u00db\7c\2\2\u00db\u00dc\7e\2\2\u00dc\u00dd")
        buf.write("\7g\2\2\u00dd\u00de\7X\2\2\u00de\u00df\7c\2\2\u00df\u00e0")
        buf.write("\7n\2\2\u00e0\u00e1\7w\2\2\u00e1\u00e2\7g\2\2\u00e2&\3")
        buf.write("\2\2\2\u00e3\u00e4\7O\2\2\u00e4\u00e5\7k\2\2\u00e5\u00e6")
        buf.write("\7e\2\2\u00e6\u00e7\7t\2\2\u00e7\u00e8\7q\2\2\u00e8\u00e9")
        buf.write("\7c\2\2\u00e9\u00ea\7e\2\2\u00ea\u00eb\7v\2\2\u00eb\u00ec")
        buf.write("\7k\2\2\u00ec\u00ed\7q\2\2\u00ed\u00ee\7p\2\2\u00ee\u00ef")
        buf.write("\7O\2\2\u00ef\u00f0\7c\2\2\u00f0\u00f1\7r\2\2\u00f1\u00f2")
        buf.write("\7r\2\2\u00f2\u00f3\7k\2\2\u00f3\u00f4\7p\2\2\u00f4\u00f5")
        buf.write("\7i\2\2\u00f5(\3\2\2\2\u00f6\u00f7\7K\2\2\u00f7\u00f8")
        buf.write("\7p\2\2\u00f8\u00f9\7u\2\2\u00f9\u00fa\7v\2\2\u00fa\u00fb")
        buf.write("\7t\2\2\u00fb\u00fc\7I\2\2\u00fc\u00fd\7t\2\2\u00fd\u00fe")
        buf.write("\7q\2\2\u00fe\u00ff\7w\2\2\u00ff\u0100\7r\2\2\u0100*\3")
        buf.write("\2\2\2\u0101\u0102\7E\2\2\u0102\u0103\7q\2\2\u0103\u0104")
        buf.write("\7t\2\2\u0104\u0105\7g\2\2\u0105\u0106\7R\2\2\u0106\u0107")
        buf.write("\7g\2\2\u0107\u0108\7t\2\2\u0108\u0109\7h\2\2\u0109\u010a")
        buf.write("\7O\2\2\u010a\u010b\7q\2\2\u010b\u010c\7f\2\2\u010c\u010d")
        buf.write("\7g\2\2\u010d\u010e\7n\2\2\u010e,\3\2\2\2\u010f\u0110")
        buf.write("\7w\2\2\u0110\u0111\7u\2\2\u0111\u0112\7g\2\2\u0112.\3")
        buf.write("\2\2\2\u0113\u0114\7R\2\2\u0114\u0115\7k\2\2\u0115\u0116")
        buf.write("\7r\2\2\u0116\u0117\7g\2\2\u0117\u0118\7n\2\2\u0118\u0119")
        buf.write("\7k\2\2\u0119\u011a\7p\2\2\u011a\u011b\7g\2\2\u011b\60")
        buf.write("\3\2\2\2\u011c\u011d\7c\2\2\u011d\u011e\7u\2\2\u011e\u011f")
        buf.write("\7u\2\2\u011f\u0120\7k\2\2\u0120\u0121\7i\2\2\u0121\u0122")
        buf.write("\7p\2\2\u0122\62\3\2\2\2\u0123\u0124\7T\2\2\u0124\u0125")
        buf.write("\7g\2\2\u0125\u0126\7u\2\2\u0126\u0127\7q\2\2\u0127\u0128")
        buf.write("\7w\2\2\u0128\u0129\7t\2\2\u0129\u012a\7e\2\2\u012a\u012b")
        buf.write("\7g\2\2\u012b\64\3\2\2\2\u012c\u012d\7O\2\2\u012d\u012e")
        buf.write("\7k\2\2\u012e\u012f\7e\2\2\u012f\u0130\7t\2\2\u0130\u0131")
        buf.write("\7q\2\2\u0131\u0132\7c\2\2\u0132\u0133\7e\2\2\u0133\u0134")
        buf.write("\7v\2\2\u0134\u0135\7k\2\2\u0135\u0136\7q\2\2\u0136\u0137")
        buf.write("\7p\2\2\u0137\66\3\2\2\2\u0138\u0139\7]\2\2\u01398\3\2")
        buf.write("\2\2\u013a\u013b\7_\2\2\u013b:\3\2\2\2\u013c\u013d\7/")
        buf.write("\2\2\u013d\u013e\7@\2\2\u013e<\3\2\2\2\u013f\u0140\7~")
        buf.write("\2\2\u0140>\3\2\2\2\u0141\u0142\7d\2\2\u0142\u0143\7n")
        buf.write("\2\2\u0143\u0144\7q\2\2\u0144\u0145\7e\2\2\u0145\u0146")
        buf.write("\7m\2\2\u0146\u0147\7u\2\2\u0147@\3\2\2\2\u0148\u0149")
        buf.write("\7U\2\2\u0149\u014a\7v\2\2\u014a\u014b\7c\2\2\u014b\u014c")
        buf.write("\7i\2\2\u014c\u014d\7g\2\2\u014dB\3\2\2\2\u014e\u014f")
        buf.write("\7e\2\2\u014f\u0150\7c\2\2\u0150\u0151\7r\2\2\u0151\u0152")
        buf.write("\7c\2\2\u0152\u0153\7e\2\2\u0153\u0154\7k\2\2\u0154\u0155")
        buf.write("\7v\2\2\u0155\u0156\7{\2\2\u0156D\3\2\2\2\u0157\u0158")
        buf.write("\7q\2\2\u0158\u0159\7w\2\2\u0159\u015a\7v\2\2\u015a\u015b")
        buf.write("\7r\2\2\u015b\u015c\7w\2\2\u015c\u015d\7v\2\2\u015d\u015e")
        buf.write("\7/\2\2\u015e\u015f\7d\2\2\u015f\u0160\7w\2\2\u0160\u0161")
        buf.write("\7h\2\2\u0161\u0162\7h\2\2\u0162\u0163\7g\2\2\u0163\u0164")
        buf.write("\7t\2\2\u0164F\3\2\2\2\u0165\u0166\7E\2\2\u0166\u0167")
        buf.write("\7q\2\2\u0167\u0168\7p\2\2\u0168\u0169\7p\2\2\u0169\u016a")
        buf.write("\7g\2\2\u016a\u016b\7e\2\2\u016b\u016c\7v\2\2\u016c\u016d")
        buf.write("\7q\2\2\u016d\u016e\7t\2\2\u016eH\3\2\2\2\u016f\u0170")
        buf.write("\7x\2\2\u0170\u0171\7k\2\2\u0171\u0172\7t\2\2\u0172\u0173")
        buf.write("\7v\2\2\u0173\u0174\7w\2\2\u0174\u0175\7c\2\2\u0175\u0176")
        buf.write("\7n\2\2\u0176J\3\2\2\2\u0177\u0178\7?\2\2\u0178L\3\2\2")
        buf.write("\2\u0179\u017d\t\2\2\2\u017a\u017c\t\3\2\2\u017b\u017a")
        buf.write("\3\2\2\2\u017c\u017f\3\2\2\2\u017d\u017b\3\2\2\2\u017d")
        buf.write("\u017e\3\2\2\2\u017eN\3\2\2\2\u017f\u017d\3\2\2\2\u0180")
        buf.write("\u0184\t\4\2\2\u0181\u0183\t\4\2\2\u0182\u0181\3\2\2\2")
        buf.write("\u0183\u0186\3\2\2\2\u0184\u0182\3\2\2\2\u0184\u0185\3")
        buf.write("\2\2\2\u0185P\3\2\2\2\u0186\u0184\3\2\2\2\u0187\u018d")
        buf.write("\7$\2\2\u0188\u018c\n\5\2\2\u0189\u018a\7^\2\2\u018a\u018c")
        buf.write("\7$\2\2\u018b\u0188\3\2\2\2\u018b\u0189\3\2\2\2\u018c")
        buf.write("\u018f\3\2\2\2\u018d\u018b\3\2\2\2\u018d\u018e\3\2\2\2")
        buf.write("\u018e\u0190\3\2\2\2\u018f\u018d\3\2\2\2\u0190\u0191\7")
        buf.write("$\2\2\u0191R\3\2\2\2\u0192\u0193\7]\2\2\u0193\u0194\7")
        buf.write("C\2\2\u0194\u0195\7N\2\2\u0195\u0196\7N\2\2\u0196\u0197")
        buf.write("\7_\2\2\u0197T\3\2\2\2\u0198\u0199\7]\2\2\u0199\u019a")
        buf.write("\7A\2\2\u019a\u019b\7_\2\2\u019bV\3\2\2\2\u019c\u019d")
        buf.write("\7\61\2\2\u019d\u019e\7,\2\2\u019e\u01a2\3\2\2\2\u019f")
        buf.write("\u01a1\13\2\2\2\u01a0\u019f\3\2\2\2\u01a1\u01a4\3\2\2")
        buf.write("\2\u01a2\u01a3\3\2\2\2\u01a2\u01a0\3\2\2\2\u01a3\u01a5")
        buf.write("\3\2\2\2\u01a4\u01a2\3\2\2\2\u01a5\u01a6\7,\2\2\u01a6")
        buf.write("\u01a7\7\61\2\2\u01a7\u01a8\3\2\2\2\u01a8\u01a9\b,\2\2")
        buf.write("\u01a9X\3\2\2\2\u01aa\u01ab\7\61\2\2\u01ab\u01ac\7\61")
        buf.write("\2\2\u01ac\u01b0\3\2\2\2\u01ad\u01af\n\6\2\2\u01ae\u01ad")
        buf.write("\3\2\2\2\u01af\u01b2\3\2\2\2\u01b0\u01ae\3\2\2\2\u01b0")
        buf.write("\u01b1\3\2\2\2\u01b1\u01b7\3\2\2\2\u01b2\u01b0\3\2\2\2")
        buf.write("\u01b3\u01b5\7\17\2\2\u01b4\u01b3\3\2\2\2\u01b4\u01b5")
        buf.write("\3\2\2\2\u01b5\u01b6\3\2\2\2\u01b6\u01b8\7\f\2\2\u01b7")
        buf.write("\u01b4\3\2\2\2\u01b7\u01b8\3\2\2\2\u01b8\u01b9\3\2\2\2")
        buf.write("\u01b9\u01ba\b-\2\2\u01baZ\3\2\2\2\u01bb\u01bd\t\7\2\2")
        buf.write("\u01bc\u01bb\3\2\2\2\u01bd\u01be\3\2\2\2\u01be\u01bc\3")
        buf.write("\2\2\2\u01be\u01bf\3\2\2\2\u01bf\u01c0\3\2\2\2\u01c0\u01c1")
        buf.write("\b.\2\2\u01c1\\\3\2\2\2\f\2\u017d\u0184\u018b\u018d\u01a2")
        buf.write("\u01b0\u01b4\u01b7\u01be\3\b\2\2")
        return buf.getvalue()


class CorePerfDSLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    ID = 38
    INT = 39
    STRING = 40
    KEYWORD_ALL = 41
    KEYWORD_REST = 42
    ML_COMMENT = 43
    SL_COMMENT = 44
    WS = 45

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'ConnectorModel'", "'{'", "','", "'}'", "'('", "'trace'", "':'", 
            "'link'", "'connectorIn'", "'connectorOut'", "')'", "'ResourceModel'", 
            "'Model'", "'TraceConfig'", "'name'", "'core'", "'TraceValueMapping'", 
            "'TraceValue'", "'MicroactionMapping'", "'InstrGroup'", "'CorePerfModel'", 
            "'use'", "'Pipeline'", "'assign'", "'Resource'", "'Microaction'", 
            "'['", "']'", "'->'", "'|'", "'blocks'", "'Stage'", "'capacity'", 
            "'output-buffer'", "'Connector'", "'virtual'", "'='", "'[ALL]'", 
            "'[?]'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "INT", "STRING", "KEYWORD_ALL", "KEYWORD_REST", "ML_COMMENT", 
            "SL_COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "ID", "INT", 
                  "STRING", "KEYWORD_ALL", "KEYWORD_REST", "ML_COMMENT", 
                  "SL_COMMENT", "WS" ]

    grammarFileName = "CorePerfDSL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.3")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


