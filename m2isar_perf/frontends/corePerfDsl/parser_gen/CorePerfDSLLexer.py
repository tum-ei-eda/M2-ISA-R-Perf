# Generated from CorePerfDSL.g4 by ANTLR 4.9.3
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2,")
        buf.write("\u01a5\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\3\2\3\2\3\2\3\2")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3")
        buf.write("\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b")
        buf.write("\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3")
        buf.write("\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13")
        buf.write("\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r\3\r")
        buf.write("\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3")
        buf.write("\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16")
        buf.write("\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17")
        buf.write("\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20")
        buf.write("\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22")
        buf.write("\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24")
        buf.write("\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25")
        buf.write("\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27")
        buf.write("\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30")
        buf.write("\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\32\3\32\3\33")
        buf.write("\3\33\3\33\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35")
        buf.write("\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37")
        buf.write("\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 ")
        buf.write("\3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3")
        buf.write("\"\3\"\3\"\3\"\3\"\3#\3#\3$\3$\7$\u015f\n$\f$\16$\u0162")
        buf.write("\13$\3%\3%\7%\u0166\n%\f%\16%\u0169\13%\3&\3&\3&\3&\7")
        buf.write("&\u016f\n&\f&\16&\u0172\13&\3&\3&\3\'\3\'\3\'\3\'\3\'")
        buf.write("\3\'\3(\3(\3(\3(\3)\3)\3)\3)\7)\u0184\n)\f)\16)\u0187")
        buf.write("\13)\3)\3)\3)\3)\3)\3*\3*\3*\3*\7*\u0192\n*\f*\16*\u0195")
        buf.write("\13*\3*\5*\u0198\n*\3*\5*\u019b\n*\3*\3*\3+\6+\u01a0\n")
        buf.write("+\r+\16+\u01a1\3+\3+\3\u0185\2,\3\3\5\4\7\5\t\6\13\7\r")
        buf.write("\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!")
        buf.write("\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67")
        buf.write("\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,\3\2\b\4\2C\\c")
        buf.write("|\7\2\60\60\62;C\\aac|\3\2\62;\5\2\f\f\17\17$$\4\2\f\f")
        buf.write("\17\17\5\2\13\f\17\17\"\"\2\u01ad\2\3\3\2\2\2\2\5\3\2")
        buf.write("\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2")
        buf.write("\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2")
        buf.write("\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37")
        buf.write("\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2")
        buf.write("\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2")
        buf.write("\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2")
        buf.write("\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2")
        buf.write("\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2")
        buf.write("\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\3W\3")
        buf.write("\2\2\2\5f\3\2\2\2\7h\3\2\2\2\tj\3\2\2\2\13l\3\2\2\2\r")
        buf.write("n\3\2\2\2\17t\3\2\2\2\21v\3\2\2\2\23{\3\2\2\2\25\u0087")
        buf.write("\3\2\2\2\27\u0094\3\2\2\2\31\u0096\3\2\2\2\33\u00a4\3")
        buf.write("\2\2\2\35\u00b6\3\2\2\2\37\u00c1\3\2\2\2!\u00d4\3\2\2")
        buf.write("\2#\u00df\3\2\2\2%\u00ed\3\2\2\2\'\u00f2\3\2\2\2)\u00f6")
        buf.write("\3\2\2\2+\u00ff\3\2\2\2-\u0106\3\2\2\2/\u010f\3\2\2\2")
        buf.write("\61\u011b\3\2\2\2\63\u011d\3\2\2\2\65\u011f\3\2\2\2\67")
        buf.write("\u0122\3\2\2\29\u0124\3\2\2\2;\u012b\3\2\2\2=\u0131\3")
        buf.write("\2\2\2?\u013a\3\2\2\2A\u0148\3\2\2\2C\u0152\3\2\2\2E\u015a")
        buf.write("\3\2\2\2G\u015c\3\2\2\2I\u0163\3\2\2\2K\u016a\3\2\2\2")
        buf.write("M\u0175\3\2\2\2O\u017b\3\2\2\2Q\u017f\3\2\2\2S\u018d\3")
        buf.write("\2\2\2U\u019f\3\2\2\2WX\7E\2\2XY\7q\2\2YZ\7p\2\2Z[\7p")
        buf.write("\2\2[\\\7g\2\2\\]\7e\2\2]^\7v\2\2^_\7q\2\2_`\7t\2\2`a")
        buf.write("\7O\2\2ab\7q\2\2bc\7f\2\2cd\7g\2\2de\7n\2\2e\4\3\2\2\2")
        buf.write("fg\7}\2\2g\6\3\2\2\2hi\7.\2\2i\b\3\2\2\2jk\7\177\2\2k")
        buf.write("\n\3\2\2\2lm\7*\2\2m\f\3\2\2\2no\7v\2\2op\7t\2\2pq\7c")
        buf.write("\2\2qr\7e\2\2rs\7g\2\2s\16\3\2\2\2tu\7<\2\2u\20\3\2\2")
        buf.write("\2vw\7n\2\2wx\7k\2\2xy\7p\2\2yz\7m\2\2z\22\3\2\2\2{|\7")
        buf.write("e\2\2|}\7q\2\2}~\7p\2\2~\177\7p\2\2\177\u0080\7g\2\2\u0080")
        buf.write("\u0081\7e\2\2\u0081\u0082\7v\2\2\u0082\u0083\7q\2\2\u0083")
        buf.write("\u0084\7t\2\2\u0084\u0085\7K\2\2\u0085\u0086\7p\2\2\u0086")
        buf.write("\24\3\2\2\2\u0087\u0088\7e\2\2\u0088\u0089\7q\2\2\u0089")
        buf.write("\u008a\7p\2\2\u008a\u008b\7p\2\2\u008b\u008c\7g\2\2\u008c")
        buf.write("\u008d\7e\2\2\u008d\u008e\7v\2\2\u008e\u008f\7q\2\2\u008f")
        buf.write("\u0090\7t\2\2\u0090\u0091\7Q\2\2\u0091\u0092\7w\2\2\u0092")
        buf.write("\u0093\7v\2\2\u0093\26\3\2\2\2\u0094\u0095\7+\2\2\u0095")
        buf.write("\30\3\2\2\2\u0096\u0097\7T\2\2\u0097\u0098\7g\2\2\u0098")
        buf.write("\u0099\7u\2\2\u0099\u009a\7q\2\2\u009a\u009b\7w\2\2\u009b")
        buf.write("\u009c\7t\2\2\u009c\u009d\7e\2\2\u009d\u009e\7g\2\2\u009e")
        buf.write("\u009f\7O\2\2\u009f\u00a0\7q\2\2\u00a0\u00a1\7f\2\2\u00a1")
        buf.write("\u00a2\7g\2\2\u00a2\u00a3\7n\2\2\u00a3\32\3\2\2\2\u00a4")
        buf.write("\u00a5\7V\2\2\u00a5\u00a6\7t\2\2\u00a6\u00a7\7c\2\2\u00a7")
        buf.write("\u00a8\7e\2\2\u00a8\u00a9\7g\2\2\u00a9\u00aa\7X\2\2\u00aa")
        buf.write("\u00ab\7c\2\2\u00ab\u00ac\7n\2\2\u00ac\u00ad\7w\2\2\u00ad")
        buf.write("\u00ae\7g\2\2\u00ae\u00af\7O\2\2\u00af\u00b0\7c\2\2\u00b0")
        buf.write("\u00b1\7r\2\2\u00b1\u00b2\7r\2\2\u00b2\u00b3\7k\2\2\u00b3")
        buf.write("\u00b4\7p\2\2\u00b4\u00b5\7i\2\2\u00b5\34\3\2\2\2\u00b6")
        buf.write("\u00b7\7V\2\2\u00b7\u00b8\7t\2\2\u00b8\u00b9\7c\2\2\u00b9")
        buf.write("\u00ba\7e\2\2\u00ba\u00bb\7g\2\2\u00bb\u00bc\7X\2\2\u00bc")
        buf.write("\u00bd\7c\2\2\u00bd\u00be\7n\2\2\u00be\u00bf\7w\2\2\u00bf")
        buf.write("\u00c0\7g\2\2\u00c0\36\3\2\2\2\u00c1\u00c2\7O\2\2\u00c2")
        buf.write("\u00c3\7k\2\2\u00c3\u00c4\7e\2\2\u00c4\u00c5\7t\2\2\u00c5")
        buf.write("\u00c6\7q\2\2\u00c6\u00c7\7c\2\2\u00c7\u00c8\7e\2\2\u00c8")
        buf.write("\u00c9\7v\2\2\u00c9\u00ca\7k\2\2\u00ca\u00cb\7q\2\2\u00cb")
        buf.write("\u00cc\7p\2\2\u00cc\u00cd\7O\2\2\u00cd\u00ce\7c\2\2\u00ce")
        buf.write("\u00cf\7r\2\2\u00cf\u00d0\7r\2\2\u00d0\u00d1\7k\2\2\u00d1")
        buf.write("\u00d2\7p\2\2\u00d2\u00d3\7i\2\2\u00d3 \3\2\2\2\u00d4")
        buf.write("\u00d5\7K\2\2\u00d5\u00d6\7p\2\2\u00d6\u00d7\7u\2\2\u00d7")
        buf.write("\u00d8\7v\2\2\u00d8\u00d9\7t\2\2\u00d9\u00da\7I\2\2\u00da")
        buf.write("\u00db\7t\2\2\u00db\u00dc\7q\2\2\u00dc\u00dd\7w\2\2\u00dd")
        buf.write("\u00de\7r\2\2\u00de\"\3\2\2\2\u00df\u00e0\7E\2\2\u00e0")
        buf.write("\u00e1\7q\2\2\u00e1\u00e2\7t\2\2\u00e2\u00e3\7g\2\2\u00e3")
        buf.write("\u00e4\7R\2\2\u00e4\u00e5\7g\2\2\u00e5\u00e6\7t\2\2\u00e6")
        buf.write("\u00e7\7h\2\2\u00e7\u00e8\7O\2\2\u00e8\u00e9\7q\2\2\u00e9")
        buf.write("\u00ea\7f\2\2\u00ea\u00eb\7g\2\2\u00eb\u00ec\7n\2\2\u00ec")
        buf.write("$\3\2\2\2\u00ed\u00ee\7e\2\2\u00ee\u00ef\7q\2\2\u00ef")
        buf.write("\u00f0\7t\2\2\u00f0\u00f1\7g\2\2\u00f1&\3\2\2\2\u00f2")
        buf.write("\u00f3\7w\2\2\u00f3\u00f4\7u\2\2\u00f4\u00f5\7g\2\2\u00f5")
        buf.write("(\3\2\2\2\u00f6\u00f7\7R\2\2\u00f7\u00f8\7k\2\2\u00f8")
        buf.write("\u00f9\7r\2\2\u00f9\u00fa\7g\2\2\u00fa\u00fb\7n\2\2\u00fb")
        buf.write("\u00fc\7k\2\2\u00fc\u00fd\7p\2\2\u00fd\u00fe\7g\2\2\u00fe")
        buf.write("*\3\2\2\2\u00ff\u0100\7c\2\2\u0100\u0101\7u\2\2\u0101")
        buf.write("\u0102\7u\2\2\u0102\u0103\7k\2\2\u0103\u0104\7i\2\2\u0104")
        buf.write("\u0105\7p\2\2\u0105,\3\2\2\2\u0106\u0107\7T\2\2\u0107")
        buf.write("\u0108\7g\2\2\u0108\u0109\7u\2\2\u0109\u010a\7q\2\2\u010a")
        buf.write("\u010b\7w\2\2\u010b\u010c\7t\2\2\u010c\u010d\7e\2\2\u010d")
        buf.write("\u010e\7g\2\2\u010e.\3\2\2\2\u010f\u0110\7O\2\2\u0110")
        buf.write("\u0111\7k\2\2\u0111\u0112\7e\2\2\u0112\u0113\7t\2\2\u0113")
        buf.write("\u0114\7q\2\2\u0114\u0115\7c\2\2\u0115\u0116\7e\2\2\u0116")
        buf.write("\u0117\7v\2\2\u0117\u0118\7k\2\2\u0118\u0119\7q\2\2\u0119")
        buf.write("\u011a\7p\2\2\u011a\60\3\2\2\2\u011b\u011c\7]\2\2\u011c")
        buf.write("\62\3\2\2\2\u011d\u011e\7_\2\2\u011e\64\3\2\2\2\u011f")
        buf.write("\u0120\7/\2\2\u0120\u0121\7@\2\2\u0121\66\3\2\2\2\u0122")
        buf.write("\u0123\7~\2\2\u01238\3\2\2\2\u0124\u0125\7d\2\2\u0125")
        buf.write("\u0126\7n\2\2\u0126\u0127\7q\2\2\u0127\u0128\7e\2\2\u0128")
        buf.write("\u0129\7m\2\2\u0129\u012a\7u\2\2\u012a:\3\2\2\2\u012b")
        buf.write("\u012c\7U\2\2\u012c\u012d\7v\2\2\u012d\u012e\7c\2\2\u012e")
        buf.write("\u012f\7i\2\2\u012f\u0130\7g\2\2\u0130<\3\2\2\2\u0131")
        buf.write("\u0132\7e\2\2\u0132\u0133\7c\2\2\u0133\u0134\7r\2\2\u0134")
        buf.write("\u0135\7c\2\2\u0135\u0136\7e\2\2\u0136\u0137\7k\2\2\u0137")
        buf.write("\u0138\7v\2\2\u0138\u0139\7{\2\2\u0139>\3\2\2\2\u013a")
        buf.write("\u013b\7q\2\2\u013b\u013c\7w\2\2\u013c\u013d\7v\2\2\u013d")
        buf.write("\u013e\7r\2\2\u013e\u013f\7w\2\2\u013f\u0140\7v\2\2\u0140")
        buf.write("\u0141\7/\2\2\u0141\u0142\7d\2\2\u0142\u0143\7w\2\2\u0143")
        buf.write("\u0144\7h\2\2\u0144\u0145\7h\2\2\u0145\u0146\7g\2\2\u0146")
        buf.write("\u0147\7t\2\2\u0147@\3\2\2\2\u0148\u0149\7E\2\2\u0149")
        buf.write("\u014a\7q\2\2\u014a\u014b\7p\2\2\u014b\u014c\7p\2\2\u014c")
        buf.write("\u014d\7g\2\2\u014d\u014e\7e\2\2\u014e\u014f\7v\2\2\u014f")
        buf.write("\u0150\7q\2\2\u0150\u0151\7t\2\2\u0151B\3\2\2\2\u0152")
        buf.write("\u0153\7x\2\2\u0153\u0154\7k\2\2\u0154\u0155\7t\2\2\u0155")
        buf.write("\u0156\7v\2\2\u0156\u0157\7w\2\2\u0157\u0158\7c\2\2\u0158")
        buf.write("\u0159\7n\2\2\u0159D\3\2\2\2\u015a\u015b\7?\2\2\u015b")
        buf.write("F\3\2\2\2\u015c\u0160\t\2\2\2\u015d\u015f\t\3\2\2\u015e")
        buf.write("\u015d\3\2\2\2\u015f\u0162\3\2\2\2\u0160\u015e\3\2\2\2")
        buf.write("\u0160\u0161\3\2\2\2\u0161H\3\2\2\2\u0162\u0160\3\2\2")
        buf.write("\2\u0163\u0167\t\4\2\2\u0164\u0166\t\4\2\2\u0165\u0164")
        buf.write("\3\2\2\2\u0166\u0169\3\2\2\2\u0167\u0165\3\2\2\2\u0167")
        buf.write("\u0168\3\2\2\2\u0168J\3\2\2\2\u0169\u0167\3\2\2\2\u016a")
        buf.write("\u0170\7$\2\2\u016b\u016f\n\5\2\2\u016c\u016d\7^\2\2\u016d")
        buf.write("\u016f\7$\2\2\u016e\u016b\3\2\2\2\u016e\u016c\3\2\2\2")
        buf.write("\u016f\u0172\3\2\2\2\u0170\u016e\3\2\2\2\u0170\u0171\3")
        buf.write("\2\2\2\u0171\u0173\3\2\2\2\u0172\u0170\3\2\2\2\u0173\u0174")
        buf.write("\7$\2\2\u0174L\3\2\2\2\u0175\u0176\7]\2\2\u0176\u0177")
        buf.write("\7C\2\2\u0177\u0178\7N\2\2\u0178\u0179\7N\2\2\u0179\u017a")
        buf.write("\7_\2\2\u017aN\3\2\2\2\u017b\u017c\7]\2\2\u017c\u017d")
        buf.write("\7A\2\2\u017d\u017e\7_\2\2\u017eP\3\2\2\2\u017f\u0180")
        buf.write("\7\61\2\2\u0180\u0181\7,\2\2\u0181\u0185\3\2\2\2\u0182")
        buf.write("\u0184\13\2\2\2\u0183\u0182\3\2\2\2\u0184\u0187\3\2\2")
        buf.write("\2\u0185\u0186\3\2\2\2\u0185\u0183\3\2\2\2\u0186\u0188")
        buf.write("\3\2\2\2\u0187\u0185\3\2\2\2\u0188\u0189\7,\2\2\u0189")
        buf.write("\u018a\7\61\2\2\u018a\u018b\3\2\2\2\u018b\u018c\b)\2\2")
        buf.write("\u018cR\3\2\2\2\u018d\u018e\7\61\2\2\u018e\u018f\7\61")
        buf.write("\2\2\u018f\u0193\3\2\2\2\u0190\u0192\n\6\2\2\u0191\u0190")
        buf.write("\3\2\2\2\u0192\u0195\3\2\2\2\u0193\u0191\3\2\2\2\u0193")
        buf.write("\u0194\3\2\2\2\u0194\u019a\3\2\2\2\u0195\u0193\3\2\2\2")
        buf.write("\u0196\u0198\7\17\2\2\u0197\u0196\3\2\2\2\u0197\u0198")
        buf.write("\3\2\2\2\u0198\u0199\3\2\2\2\u0199\u019b\7\f\2\2\u019a")
        buf.write("\u0197\3\2\2\2\u019a\u019b\3\2\2\2\u019b\u019c\3\2\2\2")
        buf.write("\u019c\u019d\b*\2\2\u019dT\3\2\2\2\u019e\u01a0\t\7\2\2")
        buf.write("\u019f\u019e\3\2\2\2\u01a0\u01a1\3\2\2\2\u01a1\u019f\3")
        buf.write("\2\2\2\u01a1\u01a2\3\2\2\2\u01a2\u01a3\3\2\2\2\u01a3\u01a4")
        buf.write("\b+\2\2\u01a4V\3\2\2\2\f\2\u0160\u0167\u016e\u0170\u0185")
        buf.write("\u0193\u0197\u019a\u01a1\3\b\2\2")
        return buf.getvalue()


class CorePerfDSLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    ID = 35
    INT = 36
    STRING = 37
    KEYWORD_ALL = 38
    KEYWORD_REST = 39
    ML_COMMENT = 40
    SL_COMMENT = 41
    WS = 42

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'ConnectorModel'", "'{'", "','", "'}'", "'('", "'trace'", "':'", 
            "'link'", "'connectorIn'", "'connectorOut'", "')'", "'ResourceModel'", 
            "'TraceValueMapping'", "'TraceValue'", "'MicroactionMapping'", 
            "'InstrGroup'", "'CorePerfModel'", "'core'", "'use'", "'Pipeline'", 
            "'assign'", "'Resource'", "'Microaction'", "'['", "']'", "'->'", 
            "'|'", "'blocks'", "'Stage'", "'capacity'", "'output-buffer'", 
            "'Connector'", "'virtual'", "'='", "'[ALL]'", "'[?]'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "INT", "STRING", "KEYWORD_ALL", "KEYWORD_REST", "ML_COMMENT", 
            "SL_COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "ID", "INT", "STRING", "KEYWORD_ALL", 
                  "KEYWORD_REST", "ML_COMMENT", "SL_COMMENT", "WS" ]

    grammarFileName = "CorePerfDSL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.3")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


