# Generated from CorePerfDSL.g4 by ANTLR 4.9.3
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2.")
        buf.write("\u01ba\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\3\2")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3")
        buf.write("\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\7\3\7")
        buf.write("\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3")
        buf.write("\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3")
        buf.write("\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\r\3\r")
        buf.write("\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16")
        buf.write("\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21")
        buf.write("\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22")
        buf.write("\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22")
        buf.write("\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23")
        buf.write("\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25")
        buf.write("\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26")
        buf.write("\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\30")
        buf.write("\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33")
        buf.write("\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34")
        buf.write("\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\36")
        buf.write("\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3")
        buf.write(" \3 \3!\3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3")
        buf.write("\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3")
        buf.write("#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3&\3&\7&\u0174")
        buf.write("\n&\f&\16&\u0177\13&\3\'\3\'\7\'\u017b\n\'\f\'\16\'\u017e")
        buf.write("\13\'\3(\3(\3(\3(\7(\u0184\n(\f(\16(\u0187\13(\3(\3(\3")
        buf.write(")\3)\3)\3)\3)\3)\3*\3*\3*\3*\3+\3+\3+\3+\7+\u0199\n+\f")
        buf.write("+\16+\u019c\13+\3+\3+\3+\3+\3+\3,\3,\3,\3,\7,\u01a7\n")
        buf.write(",\f,\16,\u01aa\13,\3,\5,\u01ad\n,\3,\5,\u01b0\n,\3,\3")
        buf.write(",\3-\6-\u01b5\n-\r-\16-\u01b6\3-\3-\3\u019a\2.\3\3\5\4")
        buf.write("\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17")
        buf.write("\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63")
        buf.write("\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-")
        buf.write("Y.\3\2\b\4\2C\\c|\7\2\60\60\62;C\\aac|\3\2\62;\5\2\f\f")
        buf.write("\17\17$$\4\2\f\f\17\17\5\2\13\f\17\17\"\"\2\u01c2\2\3")
        buf.write("\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2")
        buf.write("\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2")
        buf.write("\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2")
        buf.write("\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3")
        buf.write("\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2")
        buf.write("/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67")
        buf.write("\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2")
        buf.write("A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2")
        buf.write("\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2")
        buf.write("\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\3[\3\2\2\2\5j\3\2")
        buf.write("\2\2\7l\3\2\2\2\tn\3\2\2\2\13p\3\2\2\2\rr\3\2\2\2\17x")
        buf.write("\3\2\2\2\21z\3\2\2\2\23\177\3\2\2\2\25\u008b\3\2\2\2\27")
        buf.write("\u0098\3\2\2\2\31\u009a\3\2\2\2\33\u00a8\3\2\2\2\35\u00ae")
        buf.write("\3\2\2\2\37\u00b0\3\2\2\2!\u00b2\3\2\2\2#\u00bd\3\2\2")
        buf.write("\2%\u00cf\3\2\2\2\'\u00da\3\2\2\2)\u00ed\3\2\2\2+\u00f8")
        buf.write("\3\2\2\2-\u0106\3\2\2\2/\u010b\3\2\2\2\61\u010f\3\2\2")
        buf.write("\2\63\u0118\3\2\2\2\65\u011f\3\2\2\2\67\u0128\3\2\2\2")
        buf.write("9\u0134\3\2\2\2;\u0137\3\2\2\2=\u0139\3\2\2\2?\u0140\3")
        buf.write("\2\2\2A\u0146\3\2\2\2C\u014f\3\2\2\2E\u015d\3\2\2\2G\u0167")
        buf.write("\3\2\2\2I\u016f\3\2\2\2K\u0171\3\2\2\2M\u0178\3\2\2\2")
        buf.write("O\u017f\3\2\2\2Q\u018a\3\2\2\2S\u0190\3\2\2\2U\u0194\3")
        buf.write("\2\2\2W\u01a2\3\2\2\2Y\u01b4\3\2\2\2[\\\7E\2\2\\]\7q\2")
        buf.write("\2]^\7p\2\2^_\7p\2\2_`\7g\2\2`a\7e\2\2ab\7v\2\2bc\7q\2")
        buf.write("\2cd\7t\2\2de\7O\2\2ef\7q\2\2fg\7f\2\2gh\7g\2\2hi\7n\2")
        buf.write("\2i\4\3\2\2\2jk\7}\2\2k\6\3\2\2\2lm\7.\2\2m\b\3\2\2\2")
        buf.write("no\7\177\2\2o\n\3\2\2\2pq\7*\2\2q\f\3\2\2\2rs\7v\2\2s")
        buf.write("t\7t\2\2tu\7c\2\2uv\7e\2\2vw\7g\2\2w\16\3\2\2\2xy\7<\2")
        buf.write("\2y\20\3\2\2\2z{\7n\2\2{|\7k\2\2|}\7p\2\2}~\7m\2\2~\22")
        buf.write("\3\2\2\2\177\u0080\7e\2\2\u0080\u0081\7q\2\2\u0081\u0082")
        buf.write("\7p\2\2\u0082\u0083\7p\2\2\u0083\u0084\7g\2\2\u0084\u0085")
        buf.write("\7e\2\2\u0085\u0086\7v\2\2\u0086\u0087\7q\2\2\u0087\u0088")
        buf.write("\7t\2\2\u0088\u0089\7K\2\2\u0089\u008a\7p\2\2\u008a\24")
        buf.write("\3\2\2\2\u008b\u008c\7e\2\2\u008c\u008d\7q\2\2\u008d\u008e")
        buf.write("\7p\2\2\u008e\u008f\7p\2\2\u008f\u0090\7g\2\2\u0090\u0091")
        buf.write("\7e\2\2\u0091\u0092\7v\2\2\u0092\u0093\7q\2\2\u0093\u0094")
        buf.write("\7t\2\2\u0094\u0095\7Q\2\2\u0095\u0096\7w\2\2\u0096\u0097")
        buf.write("\7v\2\2\u0097\26\3\2\2\2\u0098\u0099\7+\2\2\u0099\30\3")
        buf.write("\2\2\2\u009a\u009b\7T\2\2\u009b\u009c\7g\2\2\u009c\u009d")
        buf.write("\7u\2\2\u009d\u009e\7q\2\2\u009e\u009f\7w\2\2\u009f\u00a0")
        buf.write("\7t\2\2\u00a0\u00a1\7e\2\2\u00a1\u00a2\7g\2\2\u00a2\u00a3")
        buf.write("\7O\2\2\u00a3\u00a4\7q\2\2\u00a4\u00a5\7f\2\2\u00a5\u00a6")
        buf.write("\7g\2\2\u00a6\u00a7\7n\2\2\u00a7\32\3\2\2\2\u00a8\u00a9")
        buf.write("\7O\2\2\u00a9\u00aa\7q\2\2\u00aa\u00ab\7f\2\2\u00ab\u00ac")
        buf.write("\7g\2\2\u00ac\u00ad\7n\2\2\u00ad\34\3\2\2\2\u00ae\u00af")
        buf.write("\7]\2\2\u00af\36\3\2\2\2\u00b0\u00b1\7_\2\2\u00b1 \3\2")
        buf.write("\2\2\u00b2\u00b3\7k\2\2\u00b3\u00b4\7p\2\2\u00b4\u00b5")
        buf.write("\7h\2\2\u00b5\u00b6\7q\2\2\u00b6\u00b7\7/\2\2\u00b7\u00b8")
        buf.write("\7v\2\2\u00b8\u00b9\7t\2\2\u00b9\u00ba\7c\2\2\u00ba\u00bb")
        buf.write("\7e\2\2\u00bb\u00bc\7g\2\2\u00bc\"\3\2\2\2\u00bd\u00be")
        buf.write("\7V\2\2\u00be\u00bf\7t\2\2\u00bf\u00c0\7c\2\2\u00c0\u00c1")
        buf.write("\7e\2\2\u00c1\u00c2\7g\2\2\u00c2\u00c3\7X\2\2\u00c3\u00c4")
        buf.write("\7c\2\2\u00c4\u00c5\7n\2\2\u00c5\u00c6\7w\2\2\u00c6\u00c7")
        buf.write("\7g\2\2\u00c7\u00c8\7O\2\2\u00c8\u00c9\7c\2\2\u00c9\u00ca")
        buf.write("\7r\2\2\u00ca\u00cb\7r\2\2\u00cb\u00cc\7k\2\2\u00cc\u00cd")
        buf.write("\7p\2\2\u00cd\u00ce\7i\2\2\u00ce$\3\2\2\2\u00cf\u00d0")
        buf.write("\7V\2\2\u00d0\u00d1\7t\2\2\u00d1\u00d2\7c\2\2\u00d2\u00d3")
        buf.write("\7e\2\2\u00d3\u00d4\7g\2\2\u00d4\u00d5\7X\2\2\u00d5\u00d6")
        buf.write("\7c\2\2\u00d6\u00d7\7n\2\2\u00d7\u00d8\7w\2\2\u00d8\u00d9")
        buf.write("\7g\2\2\u00d9&\3\2\2\2\u00da\u00db\7O\2\2\u00db\u00dc")
        buf.write("\7k\2\2\u00dc\u00dd\7e\2\2\u00dd\u00de\7t\2\2\u00de\u00df")
        buf.write("\7q\2\2\u00df\u00e0\7c\2\2\u00e0\u00e1\7e\2\2\u00e1\u00e2")
        buf.write("\7v\2\2\u00e2\u00e3\7k\2\2\u00e3\u00e4\7q\2\2\u00e4\u00e5")
        buf.write("\7p\2\2\u00e5\u00e6\7O\2\2\u00e6\u00e7\7c\2\2\u00e7\u00e8")
        buf.write("\7r\2\2\u00e8\u00e9\7r\2\2\u00e9\u00ea\7k\2\2\u00ea\u00eb")
        buf.write("\7p\2\2\u00eb\u00ec\7i\2\2\u00ec(\3\2\2\2\u00ed\u00ee")
        buf.write("\7K\2\2\u00ee\u00ef\7p\2\2\u00ef\u00f0\7u\2\2\u00f0\u00f1")
        buf.write("\7v\2\2\u00f1\u00f2\7t\2\2\u00f2\u00f3\7I\2\2\u00f3\u00f4")
        buf.write("\7t\2\2\u00f4\u00f5\7q\2\2\u00f5\u00f6\7w\2\2\u00f6\u00f7")
        buf.write("\7r\2\2\u00f7*\3\2\2\2\u00f8\u00f9\7E\2\2\u00f9\u00fa")
        buf.write("\7q\2\2\u00fa\u00fb\7t\2\2\u00fb\u00fc\7g\2\2\u00fc\u00fd")
        buf.write("\7R\2\2\u00fd\u00fe\7g\2\2\u00fe\u00ff\7t\2\2\u00ff\u0100")
        buf.write("\7h\2\2\u0100\u0101\7O\2\2\u0101\u0102\7q\2\2\u0102\u0103")
        buf.write("\7f\2\2\u0103\u0104\7g\2\2\u0104\u0105\7n\2\2\u0105,\3")
        buf.write("\2\2\2\u0106\u0107\7e\2\2\u0107\u0108\7q\2\2\u0108\u0109")
        buf.write("\7t\2\2\u0109\u010a\7g\2\2\u010a.\3\2\2\2\u010b\u010c")
        buf.write("\7w\2\2\u010c\u010d\7u\2\2\u010d\u010e\7g\2\2\u010e\60")
        buf.write("\3\2\2\2\u010f\u0110\7R\2\2\u0110\u0111\7k\2\2\u0111\u0112")
        buf.write("\7r\2\2\u0112\u0113\7g\2\2\u0113\u0114\7n\2\2\u0114\u0115")
        buf.write("\7k\2\2\u0115\u0116\7p\2\2\u0116\u0117\7g\2\2\u0117\62")
        buf.write("\3\2\2\2\u0118\u0119\7c\2\2\u0119\u011a\7u\2\2\u011a\u011b")
        buf.write("\7u\2\2\u011b\u011c\7k\2\2\u011c\u011d\7i\2\2\u011d\u011e")
        buf.write("\7p\2\2\u011e\64\3\2\2\2\u011f\u0120\7T\2\2\u0120\u0121")
        buf.write("\7g\2\2\u0121\u0122\7u\2\2\u0122\u0123\7q\2\2\u0123\u0124")
        buf.write("\7w\2\2\u0124\u0125\7t\2\2\u0125\u0126\7e\2\2\u0126\u0127")
        buf.write("\7g\2\2\u0127\66\3\2\2\2\u0128\u0129\7O\2\2\u0129\u012a")
        buf.write("\7k\2\2\u012a\u012b\7e\2\2\u012b\u012c\7t\2\2\u012c\u012d")
        buf.write("\7q\2\2\u012d\u012e\7c\2\2\u012e\u012f\7e\2\2\u012f\u0130")
        buf.write("\7v\2\2\u0130\u0131\7k\2\2\u0131\u0132\7q\2\2\u0132\u0133")
        buf.write("\7p\2\2\u01338\3\2\2\2\u0134\u0135\7/\2\2\u0135\u0136")
        buf.write("\7@\2\2\u0136:\3\2\2\2\u0137\u0138\7~\2\2\u0138<\3\2\2")
        buf.write("\2\u0139\u013a\7d\2\2\u013a\u013b\7n\2\2\u013b\u013c\7")
        buf.write("q\2\2\u013c\u013d\7e\2\2\u013d\u013e\7m\2\2\u013e\u013f")
        buf.write("\7u\2\2\u013f>\3\2\2\2\u0140\u0141\7U\2\2\u0141\u0142")
        buf.write("\7v\2\2\u0142\u0143\7c\2\2\u0143\u0144\7i\2\2\u0144\u0145")
        buf.write("\7g\2\2\u0145@\3\2\2\2\u0146\u0147\7e\2\2\u0147\u0148")
        buf.write("\7c\2\2\u0148\u0149\7r\2\2\u0149\u014a\7c\2\2\u014a\u014b")
        buf.write("\7e\2\2\u014b\u014c\7k\2\2\u014c\u014d\7v\2\2\u014d\u014e")
        buf.write("\7{\2\2\u014eB\3\2\2\2\u014f\u0150\7q\2\2\u0150\u0151")
        buf.write("\7w\2\2\u0151\u0152\7v\2\2\u0152\u0153\7r\2\2\u0153\u0154")
        buf.write("\7w\2\2\u0154\u0155\7v\2\2\u0155\u0156\7/\2\2\u0156\u0157")
        buf.write("\7d\2\2\u0157\u0158\7w\2\2\u0158\u0159\7h\2\2\u0159\u015a")
        buf.write("\7h\2\2\u015a\u015b\7g\2\2\u015b\u015c\7t\2\2\u015cD\3")
        buf.write("\2\2\2\u015d\u015e\7E\2\2\u015e\u015f\7q\2\2\u015f\u0160")
        buf.write("\7p\2\2\u0160\u0161\7p\2\2\u0161\u0162\7g\2\2\u0162\u0163")
        buf.write("\7e\2\2\u0163\u0164\7v\2\2\u0164\u0165\7q\2\2\u0165\u0166")
        buf.write("\7t\2\2\u0166F\3\2\2\2\u0167\u0168\7x\2\2\u0168\u0169")
        buf.write("\7k\2\2\u0169\u016a\7t\2\2\u016a\u016b\7v\2\2\u016b\u016c")
        buf.write("\7w\2\2\u016c\u016d\7c\2\2\u016d\u016e\7n\2\2\u016eH\3")
        buf.write("\2\2\2\u016f\u0170\7?\2\2\u0170J\3\2\2\2\u0171\u0175\t")
        buf.write("\2\2\2\u0172\u0174\t\3\2\2\u0173\u0172\3\2\2\2\u0174\u0177")
        buf.write("\3\2\2\2\u0175\u0173\3\2\2\2\u0175\u0176\3\2\2\2\u0176")
        buf.write("L\3\2\2\2\u0177\u0175\3\2\2\2\u0178\u017c\t\4\2\2\u0179")
        buf.write("\u017b\t\4\2\2\u017a\u0179\3\2\2\2\u017b\u017e\3\2\2\2")
        buf.write("\u017c\u017a\3\2\2\2\u017c\u017d\3\2\2\2\u017dN\3\2\2")
        buf.write("\2\u017e\u017c\3\2\2\2\u017f\u0185\7$\2\2\u0180\u0184")
        buf.write("\n\5\2\2\u0181\u0182\7^\2\2\u0182\u0184\7$\2\2\u0183\u0180")
        buf.write("\3\2\2\2\u0183\u0181\3\2\2\2\u0184\u0187\3\2\2\2\u0185")
        buf.write("\u0183\3\2\2\2\u0185\u0186\3\2\2\2\u0186\u0188\3\2\2\2")
        buf.write("\u0187\u0185\3\2\2\2\u0188\u0189\7$\2\2\u0189P\3\2\2\2")
        buf.write("\u018a\u018b\7]\2\2\u018b\u018c\7C\2\2\u018c\u018d\7N")
        buf.write("\2\2\u018d\u018e\7N\2\2\u018e\u018f\7_\2\2\u018fR\3\2")
        buf.write("\2\2\u0190\u0191\7]\2\2\u0191\u0192\7A\2\2\u0192\u0193")
        buf.write("\7_\2\2\u0193T\3\2\2\2\u0194\u0195\7\61\2\2\u0195\u0196")
        buf.write("\7,\2\2\u0196\u019a\3\2\2\2\u0197\u0199\13\2\2\2\u0198")
        buf.write("\u0197\3\2\2\2\u0199\u019c\3\2\2\2\u019a\u019b\3\2\2\2")
        buf.write("\u019a\u0198\3\2\2\2\u019b\u019d\3\2\2\2\u019c\u019a\3")
        buf.write("\2\2\2\u019d\u019e\7,\2\2\u019e\u019f\7\61\2\2\u019f\u01a0")
        buf.write("\3\2\2\2\u01a0\u01a1\b+\2\2\u01a1V\3\2\2\2\u01a2\u01a3")
        buf.write("\7\61\2\2\u01a3\u01a4\7\61\2\2\u01a4\u01a8\3\2\2\2\u01a5")
        buf.write("\u01a7\n\6\2\2\u01a6\u01a5\3\2\2\2\u01a7\u01aa\3\2\2\2")
        buf.write("\u01a8\u01a6\3\2\2\2\u01a8\u01a9\3\2\2\2\u01a9\u01af\3")
        buf.write("\2\2\2\u01aa\u01a8\3\2\2\2\u01ab\u01ad\7\17\2\2\u01ac")
        buf.write("\u01ab\3\2\2\2\u01ac\u01ad\3\2\2\2\u01ad\u01ae\3\2\2\2")
        buf.write("\u01ae\u01b0\7\f\2\2\u01af\u01ac\3\2\2\2\u01af\u01b0\3")
        buf.write("\2\2\2\u01b0\u01b1\3\2\2\2\u01b1\u01b2\b,\2\2\u01b2X\3")
        buf.write("\2\2\2\u01b3\u01b5\t\7\2\2\u01b4\u01b3\3\2\2\2\u01b5\u01b6")
        buf.write("\3\2\2\2\u01b6\u01b4\3\2\2\2\u01b6\u01b7\3\2\2\2\u01b7")
        buf.write("\u01b8\3\2\2\2\u01b8\u01b9\b-\2\2\u01b9Z\3\2\2\2\f\2\u0175")
        buf.write("\u017c\u0183\u0185\u019a\u01a8\u01ac\u01af\u01b6\3\b\2")
        buf.write("\2")
        return buf.getvalue()


class CorePerfDSLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    ID = 37
    INT = 38
    STRING = 39
    KEYWORD_ALL = 40
    KEYWORD_REST = 41
    ML_COMMENT = 42
    SL_COMMENT = 43
    WS = 44

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'ConnectorModel'", "'{'", "','", "'}'", "'('", "'trace'", "':'", 
            "'link'", "'connectorIn'", "'connectorOut'", "')'", "'ResourceModel'", 
            "'Model'", "'['", "']'", "'info-trace'", "'TraceValueMapping'", 
            "'TraceValue'", "'MicroactionMapping'", "'InstrGroup'", "'CorePerfModel'", 
            "'core'", "'use'", "'Pipeline'", "'assign'", "'Resource'", "'Microaction'", 
            "'->'", "'|'", "'blocks'", "'Stage'", "'capacity'", "'output-buffer'", 
            "'Connector'", "'virtual'", "'='", "'[ALL]'", "'[?]'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "INT", "STRING", "KEYWORD_ALL", "KEYWORD_REST", "ML_COMMENT", 
            "SL_COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "ID", "INT", "STRING", 
                  "KEYWORD_ALL", "KEYWORD_REST", "ML_COMMENT", "SL_COMMENT", 
                  "WS" ]

    grammarFileName = "CorePerfDSL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.3")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


