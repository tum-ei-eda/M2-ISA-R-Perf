# Generated from CorePerfDSL.g4 by ANTLR 4.9.3
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2-")
        buf.write("\u01ad\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\3\2\3\2\3")
        buf.write("\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3")
        buf.write("\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3")
        buf.write("\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n")
        buf.write("\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13")
        buf.write("\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r")
        buf.write("\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16")
        buf.write("\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17")
        buf.write("\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21")
        buf.write("\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22")
        buf.write("\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23")
        buf.write("\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24")
        buf.write("\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26")
        buf.write("\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27")
        buf.write("\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30")
        buf.write("\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\36")
        buf.write("\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37")
        buf.write("\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!")
        buf.write("\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"")
        buf.write("\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3%\3%\7%\u0167")
        buf.write("\n%\f%\16%\u016a\13%\3&\3&\7&\u016e\n&\f&\16&\u0171\13")
        buf.write("&\3\'\3\'\3\'\3\'\7\'\u0177\n\'\f\'\16\'\u017a\13\'\3")
        buf.write("\'\3\'\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3*\3*\3*\3*\7*\u018c")
        buf.write("\n*\f*\16*\u018f\13*\3*\3*\3*\3*\3*\3+\3+\3+\3+\7+\u019a")
        buf.write("\n+\f+\16+\u019d\13+\3+\5+\u01a0\n+\3+\5+\u01a3\n+\3+")
        buf.write("\3+\3,\6,\u01a8\n,\r,\16,\u01a9\3,\3,\3\u018d\2-\3\3\5")
        buf.write("\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33")
        buf.write("\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32")
        buf.write("\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U")
        buf.write(",W-\3\2\b\4\2C\\c|\7\2\60\60\62;C\\aac|\3\2\62;\5\2\f")
        buf.write("\f\17\17$$\4\2\f\f\17\17\5\2\13\f\17\17\"\"\2\u01b5\2")
        buf.write("\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3")
        buf.write("\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2")
        buf.write("\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2")
        buf.write("\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%")
        buf.write("\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2")
        buf.write("\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67")
        buf.write("\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2")
        buf.write("A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2")
        buf.write("\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2")
        buf.write("\2\2U\3\2\2\2\2W\3\2\2\2\3Y\3\2\2\2\5h\3\2\2\2\7j\3\2")
        buf.write("\2\2\tl\3\2\2\2\13n\3\2\2\2\rp\3\2\2\2\17v\3\2\2\2\21")
        buf.write("x\3\2\2\2\23}\3\2\2\2\25\u0089\3\2\2\2\27\u0096\3\2\2")
        buf.write("\2\31\u0098\3\2\2\2\33\u00a6\3\2\2\2\35\u00ac\3\2\2\2")
        buf.write("\37\u00be\3\2\2\2!\u00c9\3\2\2\2#\u00dc\3\2\2\2%\u00e7")
        buf.write("\3\2\2\2\'\u00f5\3\2\2\2)\u00fa\3\2\2\2+\u00fe\3\2\2\2")
        buf.write("-\u0107\3\2\2\2/\u010e\3\2\2\2\61\u0117\3\2\2\2\63\u0123")
        buf.write("\3\2\2\2\65\u0125\3\2\2\2\67\u0127\3\2\2\29\u012a\3\2")
        buf.write("\2\2;\u012c\3\2\2\2=\u0133\3\2\2\2?\u0139\3\2\2\2A\u0142")
        buf.write("\3\2\2\2C\u0150\3\2\2\2E\u015a\3\2\2\2G\u0162\3\2\2\2")
        buf.write("I\u0164\3\2\2\2K\u016b\3\2\2\2M\u0172\3\2\2\2O\u017d\3")
        buf.write("\2\2\2Q\u0183\3\2\2\2S\u0187\3\2\2\2U\u0195\3\2\2\2W\u01a7")
        buf.write("\3\2\2\2YZ\7E\2\2Z[\7q\2\2[\\\7p\2\2\\]\7p\2\2]^\7g\2")
        buf.write("\2^_\7e\2\2_`\7v\2\2`a\7q\2\2ab\7t\2\2bc\7O\2\2cd\7q\2")
        buf.write("\2de\7f\2\2ef\7g\2\2fg\7n\2\2g\4\3\2\2\2hi\7}\2\2i\6\3")
        buf.write("\2\2\2jk\7.\2\2k\b\3\2\2\2lm\7\177\2\2m\n\3\2\2\2no\7")
        buf.write("*\2\2o\f\3\2\2\2pq\7v\2\2qr\7t\2\2rs\7c\2\2st\7e\2\2t")
        buf.write("u\7g\2\2u\16\3\2\2\2vw\7<\2\2w\20\3\2\2\2xy\7n\2\2yz\7")
        buf.write("k\2\2z{\7p\2\2{|\7m\2\2|\22\3\2\2\2}~\7e\2\2~\177\7q\2")
        buf.write("\2\177\u0080\7p\2\2\u0080\u0081\7p\2\2\u0081\u0082\7g")
        buf.write("\2\2\u0082\u0083\7e\2\2\u0083\u0084\7v\2\2\u0084\u0085")
        buf.write("\7q\2\2\u0085\u0086\7t\2\2\u0086\u0087\7K\2\2\u0087\u0088")
        buf.write("\7p\2\2\u0088\24\3\2\2\2\u0089\u008a\7e\2\2\u008a\u008b")
        buf.write("\7q\2\2\u008b\u008c\7p\2\2\u008c\u008d\7p\2\2\u008d\u008e")
        buf.write("\7g\2\2\u008e\u008f\7e\2\2\u008f\u0090\7v\2\2\u0090\u0091")
        buf.write("\7q\2\2\u0091\u0092\7t\2\2\u0092\u0093\7Q\2\2\u0093\u0094")
        buf.write("\7w\2\2\u0094\u0095\7v\2\2\u0095\26\3\2\2\2\u0096\u0097")
        buf.write("\7+\2\2\u0097\30\3\2\2\2\u0098\u0099\7T\2\2\u0099\u009a")
        buf.write("\7g\2\2\u009a\u009b\7u\2\2\u009b\u009c\7q\2\2\u009c\u009d")
        buf.write("\7w\2\2\u009d\u009e\7t\2\2\u009e\u009f\7e\2\2\u009f\u00a0")
        buf.write("\7g\2\2\u00a0\u00a1\7O\2\2\u00a1\u00a2\7q\2\2\u00a2\u00a3")
        buf.write("\7f\2\2\u00a3\u00a4\7g\2\2\u00a4\u00a5\7n\2\2\u00a5\32")
        buf.write("\3\2\2\2\u00a6\u00a7\7O\2\2\u00a7\u00a8\7q\2\2\u00a8\u00a9")
        buf.write("\7f\2\2\u00a9\u00aa\7g\2\2\u00aa\u00ab\7n\2\2\u00ab\34")
        buf.write("\3\2\2\2\u00ac\u00ad\7V\2\2\u00ad\u00ae\7t\2\2\u00ae\u00af")
        buf.write("\7c\2\2\u00af\u00b0\7e\2\2\u00b0\u00b1\7g\2\2\u00b1\u00b2")
        buf.write("\7X\2\2\u00b2\u00b3\7c\2\2\u00b3\u00b4\7n\2\2\u00b4\u00b5")
        buf.write("\7w\2\2\u00b5\u00b6\7g\2\2\u00b6\u00b7\7O\2\2\u00b7\u00b8")
        buf.write("\7c\2\2\u00b8\u00b9\7r\2\2\u00b9\u00ba\7r\2\2\u00ba\u00bb")
        buf.write("\7k\2\2\u00bb\u00bc\7p\2\2\u00bc\u00bd\7i\2\2\u00bd\36")
        buf.write("\3\2\2\2\u00be\u00bf\7V\2\2\u00bf\u00c0\7t\2\2\u00c0\u00c1")
        buf.write("\7c\2\2\u00c1\u00c2\7e\2\2\u00c2\u00c3\7g\2\2\u00c3\u00c4")
        buf.write("\7X\2\2\u00c4\u00c5\7c\2\2\u00c5\u00c6\7n\2\2\u00c6\u00c7")
        buf.write("\7w\2\2\u00c7\u00c8\7g\2\2\u00c8 \3\2\2\2\u00c9\u00ca")
        buf.write("\7O\2\2\u00ca\u00cb\7k\2\2\u00cb\u00cc\7e\2\2\u00cc\u00cd")
        buf.write("\7t\2\2\u00cd\u00ce\7q\2\2\u00ce\u00cf\7c\2\2\u00cf\u00d0")
        buf.write("\7e\2\2\u00d0\u00d1\7v\2\2\u00d1\u00d2\7k\2\2\u00d2\u00d3")
        buf.write("\7q\2\2\u00d3\u00d4\7p\2\2\u00d4\u00d5\7O\2\2\u00d5\u00d6")
        buf.write("\7c\2\2\u00d6\u00d7\7r\2\2\u00d7\u00d8\7r\2\2\u00d8\u00d9")
        buf.write("\7k\2\2\u00d9\u00da\7p\2\2\u00da\u00db\7i\2\2\u00db\"")
        buf.write("\3\2\2\2\u00dc\u00dd\7K\2\2\u00dd\u00de\7p\2\2\u00de\u00df")
        buf.write("\7u\2\2\u00df\u00e0\7v\2\2\u00e0\u00e1\7t\2\2\u00e1\u00e2")
        buf.write("\7I\2\2\u00e2\u00e3\7t\2\2\u00e3\u00e4\7q\2\2\u00e4\u00e5")
        buf.write("\7w\2\2\u00e5\u00e6\7r\2\2\u00e6$\3\2\2\2\u00e7\u00e8")
        buf.write("\7E\2\2\u00e8\u00e9\7q\2\2\u00e9\u00ea\7t\2\2\u00ea\u00eb")
        buf.write("\7g\2\2\u00eb\u00ec\7R\2\2\u00ec\u00ed\7g\2\2\u00ed\u00ee")
        buf.write("\7t\2\2\u00ee\u00ef\7h\2\2\u00ef\u00f0\7O\2\2\u00f0\u00f1")
        buf.write("\7q\2\2\u00f1\u00f2\7f\2\2\u00f2\u00f3\7g\2\2\u00f3\u00f4")
        buf.write("\7n\2\2\u00f4&\3\2\2\2\u00f5\u00f6\7e\2\2\u00f6\u00f7")
        buf.write("\7q\2\2\u00f7\u00f8\7t\2\2\u00f8\u00f9\7g\2\2\u00f9(\3")
        buf.write("\2\2\2\u00fa\u00fb\7w\2\2\u00fb\u00fc\7u\2\2\u00fc\u00fd")
        buf.write("\7g\2\2\u00fd*\3\2\2\2\u00fe\u00ff\7R\2\2\u00ff\u0100")
        buf.write("\7k\2\2\u0100\u0101\7r\2\2\u0101\u0102\7g\2\2\u0102\u0103")
        buf.write("\7n\2\2\u0103\u0104\7k\2\2\u0104\u0105\7p\2\2\u0105\u0106")
        buf.write("\7g\2\2\u0106,\3\2\2\2\u0107\u0108\7c\2\2\u0108\u0109")
        buf.write("\7u\2\2\u0109\u010a\7u\2\2\u010a\u010b\7k\2\2\u010b\u010c")
        buf.write("\7i\2\2\u010c\u010d\7p\2\2\u010d.\3\2\2\2\u010e\u010f")
        buf.write("\7T\2\2\u010f\u0110\7g\2\2\u0110\u0111\7u\2\2\u0111\u0112")
        buf.write("\7q\2\2\u0112\u0113\7w\2\2\u0113\u0114\7t\2\2\u0114\u0115")
        buf.write("\7e\2\2\u0115\u0116\7g\2\2\u0116\60\3\2\2\2\u0117\u0118")
        buf.write("\7O\2\2\u0118\u0119\7k\2\2\u0119\u011a\7e\2\2\u011a\u011b")
        buf.write("\7t\2\2\u011b\u011c\7q\2\2\u011c\u011d\7c\2\2\u011d\u011e")
        buf.write("\7e\2\2\u011e\u011f\7v\2\2\u011f\u0120\7k\2\2\u0120\u0121")
        buf.write("\7q\2\2\u0121\u0122\7p\2\2\u0122\62\3\2\2\2\u0123\u0124")
        buf.write("\7]\2\2\u0124\64\3\2\2\2\u0125\u0126\7_\2\2\u0126\66\3")
        buf.write("\2\2\2\u0127\u0128\7/\2\2\u0128\u0129\7@\2\2\u01298\3")
        buf.write("\2\2\2\u012a\u012b\7~\2\2\u012b:\3\2\2\2\u012c\u012d\7")
        buf.write("d\2\2\u012d\u012e\7n\2\2\u012e\u012f\7q\2\2\u012f\u0130")
        buf.write("\7e\2\2\u0130\u0131\7m\2\2\u0131\u0132\7u\2\2\u0132<\3")
        buf.write("\2\2\2\u0133\u0134\7U\2\2\u0134\u0135\7v\2\2\u0135\u0136")
        buf.write("\7c\2\2\u0136\u0137\7i\2\2\u0137\u0138\7g\2\2\u0138>\3")
        buf.write("\2\2\2\u0139\u013a\7e\2\2\u013a\u013b\7c\2\2\u013b\u013c")
        buf.write("\7r\2\2\u013c\u013d\7c\2\2\u013d\u013e\7e\2\2\u013e\u013f")
        buf.write("\7k\2\2\u013f\u0140\7v\2\2\u0140\u0141\7{\2\2\u0141@\3")
        buf.write("\2\2\2\u0142\u0143\7q\2\2\u0143\u0144\7w\2\2\u0144\u0145")
        buf.write("\7v\2\2\u0145\u0146\7r\2\2\u0146\u0147\7w\2\2\u0147\u0148")
        buf.write("\7v\2\2\u0148\u0149\7/\2\2\u0149\u014a\7d\2\2\u014a\u014b")
        buf.write("\7w\2\2\u014b\u014c\7h\2\2\u014c\u014d\7h\2\2\u014d\u014e")
        buf.write("\7g\2\2\u014e\u014f\7t\2\2\u014fB\3\2\2\2\u0150\u0151")
        buf.write("\7E\2\2\u0151\u0152\7q\2\2\u0152\u0153\7p\2\2\u0153\u0154")
        buf.write("\7p\2\2\u0154\u0155\7g\2\2\u0155\u0156\7e\2\2\u0156\u0157")
        buf.write("\7v\2\2\u0157\u0158\7q\2\2\u0158\u0159\7t\2\2\u0159D\3")
        buf.write("\2\2\2\u015a\u015b\7x\2\2\u015b\u015c\7k\2\2\u015c\u015d")
        buf.write("\7t\2\2\u015d\u015e\7v\2\2\u015e\u015f\7w\2\2\u015f\u0160")
        buf.write("\7c\2\2\u0160\u0161\7n\2\2\u0161F\3\2\2\2\u0162\u0163")
        buf.write("\7?\2\2\u0163H\3\2\2\2\u0164\u0168\t\2\2\2\u0165\u0167")
        buf.write("\t\3\2\2\u0166\u0165\3\2\2\2\u0167\u016a\3\2\2\2\u0168")
        buf.write("\u0166\3\2\2\2\u0168\u0169\3\2\2\2\u0169J\3\2\2\2\u016a")
        buf.write("\u0168\3\2\2\2\u016b\u016f\t\4\2\2\u016c\u016e\t\4\2\2")
        buf.write("\u016d\u016c\3\2\2\2\u016e\u0171\3\2\2\2\u016f\u016d\3")
        buf.write("\2\2\2\u016f\u0170\3\2\2\2\u0170L\3\2\2\2\u0171\u016f")
        buf.write("\3\2\2\2\u0172\u0178\7$\2\2\u0173\u0177\n\5\2\2\u0174")
        buf.write("\u0175\7^\2\2\u0175\u0177\7$\2\2\u0176\u0173\3\2\2\2\u0176")
        buf.write("\u0174\3\2\2\2\u0177\u017a\3\2\2\2\u0178\u0176\3\2\2\2")
        buf.write("\u0178\u0179\3\2\2\2\u0179\u017b\3\2\2\2\u017a\u0178\3")
        buf.write("\2\2\2\u017b\u017c\7$\2\2\u017cN\3\2\2\2\u017d\u017e\7")
        buf.write("]\2\2\u017e\u017f\7C\2\2\u017f\u0180\7N\2\2\u0180\u0181")
        buf.write("\7N\2\2\u0181\u0182\7_\2\2\u0182P\3\2\2\2\u0183\u0184")
        buf.write("\7]\2\2\u0184\u0185\7A\2\2\u0185\u0186\7_\2\2\u0186R\3")
        buf.write("\2\2\2\u0187\u0188\7\61\2\2\u0188\u0189\7,\2\2\u0189\u018d")
        buf.write("\3\2\2\2\u018a\u018c\13\2\2\2\u018b\u018a\3\2\2\2\u018c")
        buf.write("\u018f\3\2\2\2\u018d\u018e\3\2\2\2\u018d\u018b\3\2\2\2")
        buf.write("\u018e\u0190\3\2\2\2\u018f\u018d\3\2\2\2\u0190\u0191\7")
        buf.write(",\2\2\u0191\u0192\7\61\2\2\u0192\u0193\3\2\2\2\u0193\u0194")
        buf.write("\b*\2\2\u0194T\3\2\2\2\u0195\u0196\7\61\2\2\u0196\u0197")
        buf.write("\7\61\2\2\u0197\u019b\3\2\2\2\u0198\u019a\n\6\2\2\u0199")
        buf.write("\u0198\3\2\2\2\u019a\u019d\3\2\2\2\u019b\u0199\3\2\2\2")
        buf.write("\u019b\u019c\3\2\2\2\u019c\u01a2\3\2\2\2\u019d\u019b\3")
        buf.write("\2\2\2\u019e\u01a0\7\17\2\2\u019f\u019e\3\2\2\2\u019f")
        buf.write("\u01a0\3\2\2\2\u01a0\u01a1\3\2\2\2\u01a1\u01a3\7\f\2\2")
        buf.write("\u01a2\u019f\3\2\2\2\u01a2\u01a3\3\2\2\2\u01a3\u01a4\3")
        buf.write("\2\2\2\u01a4\u01a5\b+\2\2\u01a5V\3\2\2\2\u01a6\u01a8\t")
        buf.write("\7\2\2\u01a7\u01a6\3\2\2\2\u01a8\u01a9\3\2\2\2\u01a9\u01a7")
        buf.write("\3\2\2\2\u01a9\u01aa\3\2\2\2\u01aa\u01ab\3\2\2\2\u01ab")
        buf.write("\u01ac\b,\2\2\u01acX\3\2\2\2\f\2\u0168\u016f\u0176\u0178")
        buf.write("\u018d\u019b\u019f\u01a2\u01a9\3\b\2\2")
        return buf.getvalue()


class CorePerfDSLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    ID = 36
    INT = 37
    STRING = 38
    KEYWORD_ALL = 39
    KEYWORD_REST = 40
    ML_COMMENT = 41
    SL_COMMENT = 42
    WS = 43

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'ConnectorModel'", "'{'", "','", "'}'", "'('", "'trace'", "':'", 
            "'link'", "'connectorIn'", "'connectorOut'", "')'", "'ResourceModel'", 
            "'Model'", "'TraceValueMapping'", "'TraceValue'", "'MicroactionMapping'", 
            "'InstrGroup'", "'CorePerfModel'", "'core'", "'use'", "'Pipeline'", 
            "'assign'", "'Resource'", "'Microaction'", "'['", "']'", "'->'", 
            "'|'", "'blocks'", "'Stage'", "'capacity'", "'output-buffer'", 
            "'Connector'", "'virtual'", "'='", "'[ALL]'", "'[?]'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "INT", "STRING", "KEYWORD_ALL", "KEYWORD_REST", "ML_COMMENT", 
            "SL_COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "ID", "INT", "STRING", "KEYWORD_ALL", 
                  "KEYWORD_REST", "ML_COMMENT", "SL_COMMENT", "WS" ]

    grammarFileName = "CorePerfDSL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.3")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


